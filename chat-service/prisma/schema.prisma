generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model attachments {
  id         Int       @id @default(autoincrement()) @db.Integer
  messageId  Int       @db.Integer
  filePath   String    @db.VarChar(255)
  fileType   String    @db.VarChar(255)
  uploadedAt DateTime? @db.Timestamptz @default(now())
  messages   messages  @relation(fields: [messageId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([messageId], map: "idx_attachments_messageId")
}

model chats {
  id          Int       @id @default(autoincrement()) @db.Integer
  userId      Int       @db.Integer
  name        String    @db.VarChar(100)
  createdAt   DateTime? @db.Timestamptz @default(now())
  updatedAt   DateTime? @db.Timestamptz @default(now()) @updatedAt
  user        users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  messages    messages[]

  @@index([userId], map: "idx_chats_userId")
  @@index([userId, createdAt(desc)], map: "idx_chats_userId_createdAt")
}

model messages {
  id          Int       @id @default(autoincrement()) @db.Integer
  chatId      Int       @db.Integer
  senderRole  enum_messages_senderRole
  content     String    @db.Text
  attachmentName String @db.VarChar(255)
  createdAt   DateTime? @db.Timestamptz @default(now())
  attachments attachments[]
  chat        chats      @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([chatId], map: "idx_messages_chatId")
  @@index([chatId, createdAt(desc)], map: "idx_messages_chatId_createdAt")
}

model users {
  id               Int        @id @default(autoincrement()) @db.Integer
  firstName        String     @db.VarChar(100)
  lastName         String     @db.VarChar(100)
  username         String     @unique @db.VarChar(50)
  email            String     @unique @db.VarChar(150)
  chats            chats[]
  password         String     @db.VarChar(100)
  phoneNumber      String     @db.VarChar(20)
  authorities      String     @db.Text
  isActive         Boolean    @default(true)
  isEmailVerified  Boolean
  verificationCode String     @db.VarChar(20)
  codeExpiryDate   DateTime
  createdAt        DateTime? @db.Timestamptz @default(now())
  updatedAt        DateTime? @db.Timestamptz @default(now()) @updatedAt

  @@index([username], name: "idx_users_username")
  @@index([email], name: "idx_users_email")
}

enum enum_messages_senderRole {
  user
  model
}
